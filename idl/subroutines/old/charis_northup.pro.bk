pro charis_northup,image,header0,header1
;takes a GPI cube and rotates it north up.

extast,header1,astr,res
getrot,header1,npa,cdelt,/silent

sz=size(image)
centery=sz[2]/2
centerx=sz[1]/2

nslice=1
if sz[0] gt 2 then $
nslice=sz[3]
;help,image
;gg=image[*,*,0]
;help,gg
;sxdelpar,header1,'NAXIS3'
if cdelt[0] gt 0 then begin
     ;hreverse2, gg,  h1 , tmp,  h1 , 1, /silent
     hreverse2,image[*,*,0],header1,tmp,header1,1,/silent
     for i=0,nslice-1 do image[*,*,i] = reverse(reform(image[*,*,i],sz[1],sz[2]))
     npa = -npa
         centerx0=centerx
         centerx = sz[1]-1-centerx
         ;print,'center x is',centerx,centery
         ;backbone->set_keyword, 'PSFCENTX', centerx, 'After image flip for handedness'
  endif

d_PAR_ANG=-npa

;hrot2, image[*,*,0], header1, nearest , header1, -d_PAR_ANG, $
;         -1, -1, 2,  interp=0,  missing=!values.f_nan
hrot2, image[*,*,0], header1, nearest , header1, -d_PAR_ANG, $
         centerx, centery, 2,  interp=0,  missing=!values.f_nan
sxaddpar, header1, 'ROTANG', -d_PAR_ANG, 'The rotation from Rotate North Up primitive'

;loop over cube
;print,sz

;print,npa

for i=0L,nslice-1 do begin
;for i=0L,sz[3]-1 do begin
 interpolated = rot(reform(image[*,*,i],sz[1],sz[2]), -d_PAR_ANG,1., cubic=-0.5, centerx,centery, missing=!values.f_nan)
 ;interpolated = rot(reform(image[*,*,i],sz[1],sz[2]), -d_PAR_ANG,1., cubic=-0.5, /pivot, missing=!values.f_nan)
 ;writefits,'interp.fits',interpolated
 ;nearest = rot(reform(image[*,*,i],sz[1],sz[2]), -d_PAR_ANG, 1., interp=0, /pivot, missing=!values.f_nan)
 nearest = rot(reform(image[*,*,i],sz[1],sz[2]), -d_PAR_ANG, 1., interp=0, centerx,centery, missing=!values.f_nan)
 ;nearest = rot(reform(image[*,*,i],sz[1],sz[2]), -d_PAR_ANG, 1., interp=0, /pivot, missing=!values.f_nan)
wnan = where(~finite(interpolated), nanct)
if nanct gt 0 then interpolated[wnan] = nearest[wnan]
image[*,*,i] = interpolated
endfor

;writefits,'image.fits',image
end
